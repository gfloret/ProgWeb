swagger: "2.0"
info:
  description: "Application permettant de contrôler depuis son téléphone une liste de lecture YouTube et Spotify à lire sur son ordinateur. Possibilité de rechercher des morceaux, d'en faire des playlists, puis de les stocker en base de données, tout en gérant un système d'inscription/de connexion pour différencier les utilisateurs."
  version: "0.0.1"
  title: "Smart Jukebox"
tags:
- name: "Authentification"
  description: "Inscription et Connexion d'un utilisateur"
- name: "Channels"
  description: "Opérations sur les salons"
- name: "Playlists"
  description: "Opérations sur les playlists"
schemes:
- "https"
- "http"
paths:
  /login:
    get:
      tags:
      - "Authentification"
      summary: Authentifie un utilisateur
      description: Vérifie si le Pseudo/Email et Mot de passe correspondent à un utilisateur de la BDD.
      parameters:
        - name: username
          in: query
          type: string
          required: true
          description: Pseudo ou Email de l'utilisateur à connecter.
        - name: password
          in: query
          type: string
          required: true
          description: Mot de passe de l'utilisateur à connecter.
      responses:
        200:
          description: "Informations de l'utilisateur connecté"
          schema:
            $ref: '#/definitions/userModel'
        201:
          description: "Le mot de passe n'est pas valide"
        202:
          description: "Le pseudo/email n'existe pas"
        500:
          description: "Erreur de connexion à la base de données"
  /signup:
    post:
      tags:
      - "Authentification"
      summary: Crée un utilisateur
      description: Crée un nouvel utilisateur avec les informations données
      parameters:
        - name: username
          in: body
          type: string
          required: true
          description: Pseudo de l'utilisateur
        - name : email
          in: body
          type: string
          required: true
          description: Email de l'utilisateur
        - name : emailConf
          in: body
          type: string
          required: true
          description: Confirmation de l'email
        - name : password
          in: body
          type: string
          required: true
          description: Mot de passe de l'utilisateur
        - name: passwordConf
          in: body
          type: string
          required: true
          description: Confirmation du mot de passe
      responses:
        200:
          description: "Nouveau utilisateur créé"
        201:
          description: "Le nom d'utilisateur est déjà utilisé"
        202:
          description: "L'Email est déjà utilisé"
        203:
          description: "Confirmation d'email ou de mot de passe incorrecte"
        204:
          description: "Champs manquants"
        500:
          description: "Erreur de connexion à la base de données"
  /channel/publicchannels:
    get:
      tags:
      - "Channels"
      summary: "Recupère la liste des salons publiques"
      description: "Recupère tous les salons publiques que l'utilisateur n'a pas rejoint"
      parameters:
        - name : user
          in: query
          type: string
          required: true
          description: Pseudo de l'utilisateur
      responses:
        200:
          description: "La liste des salons a bien été récupérée"
          schema:
            type: array
            items:
              $ref: '#/definitions/channelModel'
        500:
          description: "Echec de la requete"
  /channel/hostchannels:
    get:
      tags:
      - "Channels"
      summary: "Recupère la liste des salons créé par l'utilisateur"
      description: "Recupère tous les salons que l'utilisateur a créé"
      parameters:
        - name : user
          in: query
          type: string
          required: true
          description: Pseudo de l'utilisateur
      responses:
        200:
          description: "La liste des salons a bien été récupérée"
          schema:
            type: array
            items:
              $ref: '#/definitions/channelModel'
        500:
          description: "Echec de la requete"
  /channel/memberchannels:
    get:
      tags:
      - "Channels"
      summary: "Recupère la liste des salons dont l'utilisateur est membre"
      description: "Recupère la liste des salons dont l'utilisateur est membre"
      parameters:
        - name : user
          in: query
          type: string
          required: true
          description: Pseudo de l'utilisateur
      responses:
        200:
          description: "Connexion au salon réussie"
          schema:
            type: array
            items:
              $ref: '#/definitions/channelModel'
        500:
          description: "Echec de la requete"
  /channel/checkPassword:
    get:
      tags:
      - "Channels"
      summary: "Vérifie si le mot de passe du salon est correct"
      description: "Dans le cas d'un salon privé, vérifie si le mot de passe est correct"
      parameters:
        - name : name
          in: query
          type: string
          required: true
          description: Nom du salon
        - name : password
          in: query
          type: string
          required: true
          description: Mot de passe du salon
      responses:
        200:
          description: "La liste des salons a bien été récupérée"
          schema:
            $ref: '#/definitions/channelModel'
        500:
          description: "Echec de la requete"
  /channel/publicSearch:
    get:
      tags:
      - "Channels"
      summary: "Recherche un ou plusieurs salons non rejoint"
      description: "Recherche un ou plusieurs salons parmi ceux que l'utilisateur n'a pas rejoint"
      parameters:
        - name : user
          in: query
          type: string
          required: true
          description: Nom de l'utilisateur
        - name : keywords
          in: query
          type: string
          required: true
          description: Chaine de caractère à rechercher
      responses:
        200:
          description: "La recherche s'est terminée sans problème"
          schema:
            type: array
            items:
              $ref: '#/definitions/channelModel'
        500:
          description: "Echec de la requete"
  /channel/privateSearch:
    get:
      tags:
      - "Channels"
      summary: "Recherche un ou plusieurs salons rejoint"
      description: "Recherche un ou plusieurs salons parmi ceux que l'utilisateur a rejoint"
      parameters:
        - name : user
          in: query
          type: string
          required: true
          description: Nom de l'utilisateur
        - name : keywords
          in: query
          type: string
          required: true
          description: Chaine de caractère à rechercher
      responses:
        200:
          description: "La recherche s'est terminée sans problème"
          schema:
            type: array
            items:
              $ref: '#/definitions/channelModel'
        500:
          description: "Echec de la requete"
  /channel/ismemberofchannel:
    get:
      tags:
      - "Channels"
      summary: "Verifie qu'un utilisateur est membre d'un salon"
      description: "Verifie qu'un utilisateur est membre d'un salon"
      parameters:
        - name : channel
          in: query
          type: string
          required: true
          description: Nom du salon
        - name : user
          in: query
          type: string
          required: true
          description: Pseudo de l'utilisateur
      responses:
        200:
          description: "L'utilisateur est membre de ce salon"
        201:
          description: "L'utilisateur n'est pas membre du salon"
        500:
          description: "Echec de la requete"
  /channel/create:
    post:
      tags:
      - "Channels"
      summary: "Créé un nouveau salon"
      description: "Créé un nouveau salon"
      parameters:
        - name : channel
          in: body
          required: true
          schema:
            $ref: '#/definitions/channelModel'
          description: Nom du salon
      responses:
        200:
          description: "Le salon a bien été crée"
          schema:
            $ref: '#/definitions/channelModel'
        201:
          description: "Le nom du salon est déjà pris"
        202:
          description: "Le nom du salon n'a pas été renseigné"
        500:
          description: "Echec de la requete"
  /channel/addmember:
    put:
      tags:
      - "Channels"
      summary: "Ajoute un utilisateur au salon"
      description: "Ajoute un utilisateur au salon"
      parameters:
        - name : userToAdd
          in: body
          type: string
          required: true
          description: Pseudo de l'utilisateur
        - name : currentChannel
          in: body
          type: string
          required: true
          description: Nom du salon
      responses:
        200:
          description: "L'utilisateur a bien été ajoutée"
          schema:
            $ref: '#/definitions/channelModel'
        201:
          description: "Le salon est inconnu"
        202:
          description: "Tous les champs n'ont pas été renseignés"
        500:
          description: "Echec de la requete"
  /channel/addSong:
    put:
      tags:
      - "Channels"
      summary: "Ajoute une vidéo au salon"
      description: "Ajoute une vidéo au salon"
      parameters:
        - name : songID
          in: body
          type: string
          required: true
          description: ID de la vidéo à ajouter
        - name : channel
          in: body
          type: string
          required: true
          description: Nom du salon
        - name : host
          in: body
          type: string
          required: true
          description: Nom du propriétaire du salon 
      responses:
        200:
          description: "La vidéo a bien été ajoutée"
        201:
          description: "Le salon est inconnu"
        202:
          description: "Tous les champs n'ont pas été renseignés"
        500:
          description: "Echec de la requete"
  /channel/leavechannel:
    put:
      tags:
      - "Channels"
      summary: "Quitter un salon"
      description: "Quitter un salon"
      parameters:
        - name : member
          in: body
          type: string
          required: true
          description: Pseudo de l'utilisateur
        - name : channel
          in: body
          type: string
          required: true
          description: Nom du salon
      responses:
        200:
          description: "L'utilisateur a bien été retiré"
          schema:
            $ref: '#/definitions/channelModel'
        201:
          description: "Le salon est inconnu"
        202:
          description: "Tous les champs n'ont pas été renseignés"
        500:
          description: "Echec de la requete"
  /channel/deletechannel:
    delete:
      tags:
      - "Channels"
      summary: "Supprime un salon et ses messages"
      description: "Supprime un salon et tous les messages du chat associés"
      parameters:
        - name : channelToDelete
          in: query
          type: string
          required: true
          description: Nom du salon
      responses:
        200:
          description: "Le salon a été supprimé"
        500:
          description: "Echec de la requete"
  /channel/message:
    post:
      tags:
      - "Channels"
      summary: "Ajoute un message au salon"
      parameters:
        - name : message
          in: body
          schema:
            $ref: '#/definitions/messageModel'
          description: Message
      responses:
        200:
          description: "Le message a bien été ajouté"
          schema:
            $ref: '#/definitions/messageModel'
        201:
          description: "Certains champs sont manquants"
        500:
          description: "Echec de la requete"
  /channel/messages:
    get:
      tags:
      - "Channels"
      summary: "Récupère les messages du salon"
      parameters:
        - name : channel
          in: query
          type: string
          required: true
          description: "Nom du salon"
      responses:
        200:
          description: "Récupération de la liste de messages d'un salon"
          schema:
            type: array
            items:
              $ref: '#/definitions/messageModel'
        500:
          description: "Echec de la requete"
  /playlists/playlist:
    get:
      tags:
      - "Playlists"
      summary: "Récupère la playlist d'un utilisateur"
      parameters:
        - name : host
          in: query
          type: string
          required: true
          description: "Pseudo de l'utilisateur"
      responses:
        200:
          description: "Récupération la playlist de l'utilisateur"
          schema:
            type: array
            items:
              type: string
        500:
          description: "Echec de la requete"
  /playlists/channelplaylist:
    get:
      tags:
      - "Playlists"
      summary: "Récupère la playlist d'un salon"
      parameters:
        - name : channelName
          in: query
          type: string
          required: true
          description: "Nom du salon"
      responses:
        200:
          description: "Récupération la playlist du salon"
          schema:
            type: array
            items:
              type: string
        201:
          description: "Nom du salon inconnue"
        500:
          description: "Echec de la requete"
  /playlists/putplaylist:
    put:
      tags:
      - "Playlists"
      summary: "Ajoute une vidéo à la playlist"
      parameters:
        - name : host
          in: body
          type: string
          required: true
          description: "Pseudo du propriétaire de la playlist"
        - name: songID
          in : body
          type: string
          required: true
          description : "ID de la vidéo à ajouter"
      responses:
        200:
          description: "La vidéo a bien été ajoutée"
        500:
          description: "Echec de la requete"
  /playlists/deleteplaylist:
    delete:
      tags:
      - "Playlists"
      summary: "Supprime une vidéo de la playlist d'un utilisateur"
      parameters:
        - name : channelName
          in: body
          type: string
          required: true
          description: "Pseudo du propriétaire de la playlist"
        - name: songID
          in : body
          type: string
          required: true
          description : "ID de la vidéo à supprimer"
      responses:
        200:
          description: "La vidéo a bien été supprimée"
        500:
          description: "Echec de la requete"
  /playlists/deletechannelplaylist:
    delete:
      tags:
      - "Playlists"
      summary: "Supprime une vidéo de la playlist d'un salon"
      parameters:
        - name : host
          in: body
          type: string
          required: true
          description: "Nom du salon correspondant à la playlist"
        - name: songID
          in : body
          type: string
          required: true
          description : "ID de la vidéo à supprimer"
      responses:
        200:
          description: "La vidéo a bien été supprimée"
        500:
          description: "Echec de la requete"
definitions:
  channelModel:
    type: object
    required: [name]
    properties:
      name:
        type: string
        unique: true
      description:
        type: string
      password:
        type: string
      host:
        type: string
      members:
        type: array
        items:
          type: string
      toSearch:
        type: string
      playlist:
        type: array
        items:
          type: string
  userModel:
    type: object
    required: [username,email,password]
    properties:
      username:
        type: string
        unique: true
      email:
        type: string
        unique: true
        format: email
      password:
        type: string
        format: password
      playlist:
        type: array
        items:
          type: string
  messageModel:
    type: object
    required: [content, datetime, author, channelName]
    properties:
      content:
        type: string
      datetime: 
        type: string
      author:
        type: string
      channelName:
        type: string
externalDocs:
  description: "GitHub de SmartJukebox"
  url: "https://github.com/gfloret/ProgWeb"