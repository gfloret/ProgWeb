swagger: "2.0"
info:
  description: "Application permettant de contrôler depuis son téléphone une liste de lecture YouTube et Spotify à lire sur son ordinateur. Possibilité de rechercher des morceaux, d'en faire des playlists, puis de les stocker en base de données, tout en gérant un système d'inscription/de connexion pour différencier les utilisateurs."
  version: "0.0.1"
  title: "Smart Jukebox"
tags:
- name: "Authentification"
  description: "Inscription et Connexion d'un utilisateur"
- name: "YouTube"
  description: "Operations about YouTube"
- name: "Spotify"
  description: "Operations about Spotify"
schemes:
- "https"
- "http"
paths:
  /login:
    get:
      tags:
      - "Authentification"
      summary: Authentifie un utilisateur
      description: Vérifie si le Pseudo/Email et Mot de passe correspondent à un utilisateur de la BDD.
      parameters:
        - name: username
          in: query
          type: string
          required: true
          description: Pseudo ou Email de l'utilisateur à connecter.
        - name: password
          in: query
          type: string
          required: true
          description: Mot de passe de l'utilisateur à connecter.
      responses:
        200:
          description: "Informations de l'utilisateur connecté"
          schema:
            $ref: '#/definitions/userModel'
        201:
          description: "Le mot de passe n'est pas valide"
        202:
          description: "Le pseudo/email n'existe pas"
        500:
          description: "Erreur de connexion à la base de données"
  /signup:
    post:
      tags:
      - "Authentification"
      summary: Crée un utilisateur
      description: Crée un nouvel utilisateur avec les informations données
      parameters:
        - name: username
          in: body
          type: string
          required: true
          description: Pseudo de l'utilisateur
        - name : email
          in: body
          type: string
          required: true
          description: Email de l'utilisateur
        - name : emailConf
          in: body
          type: string
          required: true
          description: Confirmation de l'email
        - name : password
          in: body
          type: string
          required: true
          description: Mot de passe de l'utilisateur
        - name: passwordConf
          in: body
          type: string
          required: true
          description: Confirmation du mot de passe
      responses:
        200:
          description: "Nouveau utilisateur créé"
        201:
          description: "Le nom d'utilisateur est déjà utilisé"
        202:
          description: "L'Email est déjà utilisé"
        203:
          description: "Confirmation d'email ou de mot de passe incorrecte"
        204:
          description: "Champs manquants"
        500:
          description: "Erreur de connexion à la base de données"
  /uniqueSongYouTube:
    get:
      tags:
      - "YouTube"
      summary: "Recupère la vidéo YouTube courante"
      description: ""
      operationId: "findCurrentVideo"
      produces:
      - "application/xml"
      - "application/json"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
    delete:
      tags:
      - "YouTube"
      summary: "Vide la collection uniqueSongModelYouTube"
      description: ""
      operationId: "deleteVideo"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      responses:
        404:
          description: "Video not found"
        405:
          description: "Validation exception"
    post:
      tags:
      - "YouTube"
      summary: "Ajoute une vidéo YouTube"
      description: ""
      operationId: "addVideo"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "query"
        description: "ID of video that needs to be added to database"
        required: true
        type: "integer"
        format: "int64"
      responses:
        405:
          description: "Invalid input"
  /uniqueSongSpotify:
    get:
      tags:
      - "Spotify"
      summary: "Récupère la piste Spotify courante"
      description: ""
      operationId: "findCurrentAudio"
      produces:
      - "application/xml"
      - "application/json"
      responses:
        200:
          description: "OK"
        400:
          description: "Bad request"
    delete:
      tags:
      - "Spotify"
      summary: "Vide la collection uniqueSongModelSpotify"
      description: ""
      operationId: "deleteAudio"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      responses:
        404:
          description: "Audio not found"
        405:
          description: "Validation exception"
    post:
      tags:
      - "Spotify"
      summary: "Ajoute une piste Spotify"
      description: ""
      operationId: "addAudio"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "query"
        description: "ID of audio that needs to be added to database"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid input"
definitions:
  channelModel:
    type: object
    required: [name]
    properties:
      name:
        type: string
        unique: true
      description:
        type: string
      password:
        type: string
      host:
        type: string
      members:
        type: array
        items:
          type: string
      toSearch:
        type: string
      playlist:
        type: array
        items:
          type: string
  userModel:
    type: object
    required: [username,email,password]
    properties:
      username:
        type: string
        unique: true
      email:
        type: string
        unique: true
        format: email
      password:
        type: string
        format: password
      playlist:
        type: array
        items:
          type: string
  messageModel:
    type: object
    required: [content, datetime, author, channelName]
    properties:
      content:
        type: string
      datetime: 
        type: string
      author:
        type: string
      channelName:
        type: string
externalDocs:
  description: "GitHub de SmartJukebox"
  url: "https://github.com/gfloret/ProgWeb"